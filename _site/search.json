[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415-GAA",
    "section": "",
    "text": "Welcome to IS415 Geospatial and Applications\nThis is the course website of Chuang Jin Lei and you will find my course work on this website."
  },
  {
    "objectID": "Hand-on_EX02.html",
    "href": "Hand-on_EX02.html",
    "title": "Hands-on_EX02:",
    "section": "",
    "text": "Downloading and loading packages that will be used in this exercise\n\npacman::p_load(sf, tmap, tidyverse)\n\nImporting data into R\n\nmpsz &lt;- st_read(dsn= \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\npopdata &lt;- read_csv(\"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/aspatial/respopagesexfa2011to2020.csv\")\n\nRows: 738492 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, FA\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nData table with year 2020 values\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\nConverting the values of PA and SZ fields to uppercase\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nJoining the attribute data to geospatial data\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nSaving new dataframe\n\nwrite_rds(mpsz_pop2020, \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/geospatial/mpszpop2020.rds\")\n\nPlotting a choropleth map\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\nCreating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nCreating a base map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\nCreating a choropleth map showing geographical distribution\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\nCreating choropleth map using tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nCreating choropleth map with tm_fill() and tm_border\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\nCreating choropleth map with classification method jenks\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCreating choropleth map with classification method equal\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nDescriptive statistic of DEPENDENCY field\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6540  0.7063  0.7712  0.7657 19.0000      92 \n\n\nCreating choropleth map with break vector c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break\n\n\n\n\n\nCreating choropleth map using Colourbrewer palette “Blues”\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nReversing ColourBrewer palette “Green”\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCreating choropleth map with classic styles\nother styles include: white, gray, natural, cobalt, col_blind, albatross, beaver, bw, watercolor.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\nCreating choropleth map with other map furniture such as compass, scale bar and grid lines\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nCreating small multiple choropleth maps by assigning values to one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\nCreating multiple small choropleth maps by defining a group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\ncreating multiple stand-alone maps with tmap_arrange()\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\nCreating choropleth map showing only the central region\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  },
  {
    "objectID": "Hands-on_EX01.html",
    "href": "Hands-on_EX01.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "",
    "text": "Loading packages that are needed for the exercise\n\npacman::p_load(sf, tidyverse)\n\nSaving the different datasets as R objects\n\nmpsz &lt;- st_read(dsn = \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial \", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial ' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\ncyclingpath &lt;- st_read(dsn = \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial \", \n                      layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial ' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\npreschool &lt;- st_read(\"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial /PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial /PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nlistings &lt;- read_csv(\"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/aspatial/listings.csv\")\n\nRows: 3457 Columns: 75\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): listing_url, source, name, neighborhood_overview, picture_url, ho...\ndbl  (36): id, scrape_id, host_id, host_listings_count, host_total_listings_...\nlgl   (9): description, host_is_superhost, host_has_profile_pic, host_identi...\ndate  (5): last_scraped, host_since, calendar_last_scraped, first_review, la...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nst_geometry(mpsz) glimpse(mpsz) head(mpsz, n=5)\nplot(mpsz) plot(st_geometry(mpsz)) plot(mpsz[“PLN_AREA_N”]) st_crs(mpsz) mpsz3414 &lt;- st_set_crs(mpsz, 3414) st_crs(mpsz3414) preschool3414 &lt;- st_transform(preschool, crs = 3414) list(listings) listings_sf &lt;- st_as_sf(listings, coords = c(“longitude”, “latitude”), crs=4326) %&gt;% st_transform(crs = 3414) glimpse(listings_sf) buffer_cycling &lt;- st_buffer(cyclingpath, dist=5, nQuadSegs = 30) buffer_cycling\\(AREA &lt;- st_area(buffer_cycling) sum(buffer_cycling\\)AREA) mpsz3414\\(`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414)) summary(mpsz3414\\)PreSch Count) top_n(mpsz3414, 1, PreSch Count) mpsz3414\\(Area &lt;- mpsz3414 %&gt;%  st_area() mpsz3414 &lt;- mpsz3414 %&gt;%  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000) hist(mpsz3414\\)PreSch Density) ggplot(data=mpsz3414, aes(x= as.numeric(PreSch Density)))+ geom_histogram(bins=20, color=“black”, fill=“light blue”) + labs(title = “Are pre-school even distributed in Singapore?”, subtitle= “There are many planning sub-zones with a single pre-school, on the other hand, are two planning sub-zones with at least 20 pre-schools”, x = “Pre-school density (per km sq)”, y = “Frequency”) ggplot(data=mpsz3414, aes(y = PreSch Count, x= as.numeric(PreSch Density)))+ geom_point(color=“black”, fill=“light blue”) + xlim(0, 40) + ylim(0, 40) + labs(title = ““, x =”Pre-school density (per km sq)“, y =”Pre-school count”)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_EX01/Hands-on_EX01 copy.html",
    "href": "Hands-on_Ex/Hands-on_EX01/Hands-on_EX01 copy.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling",
    "section": "",
    "text": "Loading packages that are needed for the exercise\n\npacman::p_load(sf, tidyverse)\n\nSaving the different datasets as R objects\n\nmpsz &lt;- st_read(dsn = \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial \", \n               layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial ' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\ncyclingpath &lt;- st_read(dsn = \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial \", \n                      layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial ' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\npreschool &lt;- st_read(\"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial /PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/geospatial /PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\nlistings &lt;- read_csv(\"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX01/data/aspatial/listings.csv\")\n\nRows: 3457 Columns: 75\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (25): listing_url, source, name, neighborhood_overview, picture_url, ho...\ndbl  (36): id, scrape_id, host_id, host_listings_count, host_total_listings_...\nlgl   (9): description, host_is_superhost, host_has_profile_pic, host_identi...\ndate  (5): last_scraped, host_since, calendar_last_scraped, first_review, la...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nst_geometry(mpsz) glimpse(mpsz) head(mpsz, n=5)\nplot(mpsz) plot(st_geometry(mpsz)) plot(mpsz[“PLN_AREA_N”]) st_crs(mpsz) mpsz3414 &lt;- st_set_crs(mpsz, 3414) st_crs(mpsz3414) preschool3414 &lt;- st_transform(preschool, crs = 3414) list(listings) listings_sf &lt;- st_as_sf(listings, coords = c(“longitude”, “latitude”), crs=4326) %&gt;% st_transform(crs = 3414) glimpse(listings_sf) buffer_cycling &lt;- st_buffer(cyclingpath, dist=5, nQuadSegs = 30) buffer_cycling\\(AREA &lt;- st_area(buffer_cycling) sum(buffer_cycling\\)AREA) mpsz3414\\(`PreSch Count`&lt;- lengths(st_intersects(mpsz3414, preschool3414)) summary(mpsz3414\\)PreSch Count) top_n(mpsz3414, 1, PreSch Count) mpsz3414\\(Area &lt;- mpsz3414 %&gt;%  st_area() mpsz3414 &lt;- mpsz3414 %&gt;%  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000) hist(mpsz3414\\)PreSch Density) ggplot(data=mpsz3414, aes(x= as.numeric(PreSch Density)))+ geom_histogram(bins=20, color=“black”, fill=“light blue”) + labs(title = “Are pre-school even distributed in Singapore?”, subtitle= “There are many planning sub-zones with a single pre-school, on the other hand, are two planning sub-zones with at least 20 pre-schools”, x = “Pre-school density (per km sq)”, y = “Frequency”) ggplot(data=mpsz3414, aes(y = PreSch Count, x= as.numeric(PreSch Density)))+ geom_point(color=“black”, fill=“light blue”) + xlim(0, 40) + ylim(0, 40) + labs(title = ““, x =”Pre-school density (per km sq)“, y =”Pre-school count”)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_EX02/Hand-on_EX02.html",
    "href": "Hands-on_Ex/Hands-on_EX02/Hand-on_EX02.html",
    "title": "Hands-on_EX02:",
    "section": "",
    "text": "Downloading and loading packages that will be used in this exercise\n\npacman::p_load(sf, tmap, tidyverse)\n\nImporting data into R\n\nmpsz &lt;- st_read(dsn= \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\npopdata &lt;- read_csv(\"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/aspatial/respopagesexfa2011to2020.csv\")\n\nRows: 738492 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, FA\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nData table with year 2020 values\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup()%&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\nrowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n/`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n\n\nConverting the values of PA and SZ fields to uppercase\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nJoining the attribute data to geospatial data\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\nSaving new dataframe\n\nwrite_rds(mpsz_pop2020, \"/Users/chuangjinlei/Desktop/JinLei13/IS415-GAA/Hands-on_Ex/Hands-on_EX02/data/geospatial/mpszpop2020.rds\")\n\nPlotting a choropleth map\n\ntmap_mode(\"plot\")\n\ntmap mode set to plotting\n\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\nCreating a choropleth map by using tmap’s elements\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nCreating a base map\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\nCreating a choropleth map showing geographical distribution\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\nCreating choropleth map using tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nCreating choropleth map with tm_fill() and tm_border\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\nCreating choropleth map with classification method jenks\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCreating choropleth map with classification method equal\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nDescriptive statistic of DEPENDENCY field\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.0000  0.6540  0.7063  0.7712  0.7657 19.0000      92 \n\n\nCreating choropleth map with break vector c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\nWarning: Values have found that are higher than the highest break\n\n\n\n\n\nCreating choropleth map using Colourbrewer palette “Blues”\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nReversing ColourBrewer palette “Green”\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCreating choropleth map with classic styles\nother styles include: white, gray, natural, cobalt, col_blind, albatross, beaver, bw, watercolor.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\ntmap style set to \"classic\"\n\n\nother available styles are: \"white\", \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"watercolor\" \n\n\n\n\n\nCreating choropleth map with other map furniture such as compass, scale bar and grid lines\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nCreating small multiple choropleth maps by assigning values to one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\ntmap style set to \"white\"\n\n\nother available styles are: \"gray\", \"natural\", \"cobalt\", \"col_blind\", \"albatross\", \"beaver\", \"bw\", \"classic\", \"watercolor\" \n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\nCreating multiple small choropleth maps by defining a group-by variable in tm_facets()\n\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\nWarning: The argument drop.shapes has been renamed to drop.units, and is\ntherefore deprecated\n\n\n\n\n\ncreating multiple stand-alone maps with tmap_arrange()\n\nyoungmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"YOUNG\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\nagedmap &lt;- tm_shape(mpsz_pop2020)+ \n  tm_polygons(\"AGED\", \n              style = \"quantile\", \n              palette = \"Blues\")\n\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\nCreating choropleth map showing only the central region\n\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\nWarning in pre_process_gt(x, interactive = interactive, orig_crs =\ngm$shape.orig_crs): legend.width controls the width of the legend within a map.\nPlease use legend.outside.size to control the width of the outside legend"
  }
]